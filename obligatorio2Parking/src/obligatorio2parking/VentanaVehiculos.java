/*
AUTORES - ESTUDIANTES
 JHONATAN ADALID (320368)
 LORENZO ALDAO (307239)
*/
package obligatorio2parking;

import dominio.Sistema;
import dominio.Vehiculo;
import javax.swing.*;
import java.util.ArrayList;
import java.util.List;

public class VentanaVehiculos extends javax.swing.JFrame {
    
    private Sistema sistema;

    public VentanaVehiculos(Sistema sistema) {
        this.sistema = sistema;
        initComponents();
        cargarListaVehiculos();
    } 
    
    private void cargarListaVehiculos(){
        ArrayList<Vehiculo> lista = sistema.getVehiculos();
        String[] datos = new String[lista.size()];
        
        for(int i = 0; i < lista.size(); i++){
            Vehiculo veh = lista.get(i);
            datos[i] = veh.getMatricula() + " - " + veh.getMarca();
        }
        
        listaVehiculos.setListData(datos);
    }
    
    private void limpiarCampos() {
        txtMatricula.setText("");
        txtMarca.setText("");
        txtModelo.setText("");
        txtEstado.setText("");
        txtMatricula.requestFocus(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMatricula = new javax.swing.JLabel();
        lblMarca = new javax.swing.JLabel();
        lblModelo = new javax.swing.JLabel();
        txtMatricula = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        txtModelo = new javax.swing.JTextField();
        lblEstado = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        panelScrollVehiculos = new javax.swing.JScrollPane();
        listaVehiculos = new javax.swing.JList<>();
        lblVehiculos = new javax.swing.JLabel();
        btnVaciarV = new javax.swing.JButton();
        btnAgregarV = new javax.swing.JButton();
        btnElminarV = new javax.swing.JButton();
        scrollDetallesVehiculos = new javax.swing.JScrollPane();
        txtAreaVehiculo = new javax.swing.JTextArea();
        lblDetalles = new javax.swing.JLabel();
        btnElminarV1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Vehículos");

        lblMatricula.setText("Matrícula:");

        lblMarca.setText("Marca:");

        lblModelo.setText("Modelo:");

        txtMatricula.setColumns(4);

        txtMarca.setColumns(4);

        txtModelo.setColumns(4);

        lblEstado.setText("Estado:");

        txtEstado.setColumns(4);

        panelScrollVehiculos.setViewportView(listaVehiculos);

        lblVehiculos.setText("Vehiculos:");

        btnVaciarV.setText("Vaciar");
        btnVaciarV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVaciarVActionPerformed(evt);
            }
        });

        btnAgregarV.setText("Agregar");
        btnAgregarV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarVActionPerformed(evt);
            }
        });

        btnElminarV.setText("Eliminar");
        btnElminarV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElminarVActionPerformed(evt);
            }
        });

        txtAreaVehiculo.setColumns(20);
        txtAreaVehiculo.setRows(5);
        scrollDetallesVehiculos.setViewportView(txtAreaVehiculo);

        lblDetalles.setText("Detalles de Vehículo:");

        btnElminarV1.setText("Mostrar detalles");
        btnElminarV1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElminarV1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelScrollVehiculos, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblVehiculos))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrollDetallesVehiculos, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDetalles)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVaciarV, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAgregarV, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnElminarV, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnElminarV1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVehiculos)
                    .addComponent(lblDetalles))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scrollDetallesVehiculos)
                    .addComponent(panelScrollVehiculos, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMatricula)
                                .addGap(18, 18, 18)
                                .addComponent(lblMarca)
                                .addGap(24, 24, 24)
                                .addComponent(lblModelo))
                            .addComponent(lblEstado))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVaciarV)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAgregarV)
                        .addComponent(btnElminarV)
                        .addComponent(btnElminarV1)))
                .addGap(33, 33, 33))
        );

        setBounds(0, 0, 772, 342);
    }// </editor-fold>//GEN-END:initComponents

    private void btnElminarVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElminarVActionPerformed
        int indiceSeleccionado = listaVehiculos.getSelectedIndex();
        
        if (indiceSeleccionado == -1) {
            JOptionPane.showMessageDialog(this, 
                "Seleccione un vehículo para eliminar", 
                "Advertencia", 
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int confirmacion = JOptionPane.showConfirmDialog(this, 
            "¿Está seguro de que desea eliminar este vehículo?", 
            "Confirmar eliminación", 
            JOptionPane.YES_NO_OPTION);
            
        if (confirmacion == JOptionPane.YES_OPTION) {
            try {
                // Obtener el vehículo a eliminar
                ArrayList<Vehiculo> vehiculos = sistema.getVehiculos();
                Vehiculo vehiculoAEliminar = vehiculos.get(indiceSeleccionado);
                
                // Eliminar del sistema (asumiendo que existe un método eliminarVehiculo)
                // Si no existe, eliminar directamente de la lista
                vehiculos.remove(indiceSeleccionado);
                
                // Recargar la lista visual
                cargarListaVehiculos();
                
                // Limpiar el área de detalles
                txtAreaVehiculo.setText("");
                
                JOptionPane.showMessageDialog(this, 
                    "Vehículo eliminado exitosamente", 
                    "Éxito", 
                    JOptionPane.INFORMATION_MESSAGE);
                    
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, 
                    "Error al eliminar vehículo: " + ex.getMessage(), 
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnElminarVActionPerformed

    private void btnAgregarVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarVActionPerformed
         try {
            // Validar que todos los campos estén llenos
            String matricula = txtMatricula.getText().trim();
            String marca = txtMarca.getText().trim();
            String modelo = txtModelo.getText().trim();
            String estado = txtEstado.getText().trim();
            
            if (matricula.isEmpty() || marca.isEmpty() || modelo.isEmpty() || estado.isEmpty()) {
                JOptionPane.showMessageDialog(this, 
                    "Todos los campos son obligatorios", 
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Verificar que la matrícula no exista
            ArrayList<Vehiculo> vehiculos = sistema.getVehiculos();
            for (Vehiculo v : vehiculos) {
                if (v.getMatricula().equalsIgnoreCase(matricula)) {
                    JOptionPane.showMessageDialog(this, 
                        "Ya existe un vehículo con esa matrícula", 
                        "Error", 
                        JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            
            // Crear y agregar el vehículo al sistema
            Vehiculo nuevoVehiculo = new Vehiculo(matricula, marca, modelo, estado);
            sistema.agregarVehiculo(nuevoVehiculo);
            
            // Recargar la lista visual
            cargarListaVehiculos();
            
            // Limpiar los campos
            limpiarCampos();
            
            JOptionPane.showMessageDialog(this, 
                "Vehículo agregado exitosamente", 
                "Éxito", 
                JOptionPane.INFORMATION_MESSAGE);
                
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, 
                "Error al agregar vehículo: " + ex.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarVActionPerformed

    private void btnVaciarVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVaciarVActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btnVaciarVActionPerformed

    private void btnElminarV1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElminarV1ActionPerformed
         int indiceSeleccionado = listaVehiculos.getSelectedIndex();
        if (indiceSeleccionado >= 0) {
            ArrayList<Vehiculo> vehiculos = sistema.getVehiculos();
            if (indiceSeleccionado < vehiculos.size()) {
                Vehiculo vehiculo = vehiculos.get(indiceSeleccionado);
                StringBuilder detalles = new StringBuilder();
                detalles.append("Matrícula: ").append(vehiculo.getMatricula()).append("\n");
                detalles.append("Marca: ").append(vehiculo.getMarca()).append("\n");
                detalles.append("Modelo: ").append(vehiculo.getModelo()).append("\n");
                detalles.append("Estado: ").append(vehiculo.getEstado()).append("\n");
                
                txtAreaVehiculo.setText(detalles.toString());
            }
        } else {
            txtAreaVehiculo.setText("");
        }
    }//GEN-LAST:event_btnElminarV1ActionPerformed

    /**
     * @param args the command line arguments
     */
public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaVehiculos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaVehiculos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaVehiculos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaVehiculos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Sistema sistema = new Sistema();
                 new VentanaClientes(sistema).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarV;
    private javax.swing.JButton btnElminarV;
    private javax.swing.JButton btnElminarV1;
    private javax.swing.JButton btnVaciarV;
    private javax.swing.JLabel lblDetalles;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblMarca;
    private javax.swing.JLabel lblMatricula;
    private javax.swing.JLabel lblModelo;
    private javax.swing.JLabel lblVehiculos;
    private javax.swing.JList<String> listaVehiculos;
    private javax.swing.JScrollPane panelScrollVehiculos;
    private javax.swing.JScrollPane scrollDetallesVehiculos;
    private javax.swing.JTextArea txtAreaVehiculo;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JTextField txtModelo;
    // End of variables declaration//GEN-END:variables
}
